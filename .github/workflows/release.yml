name: Release desktop binaries
on: 
  release:
    types:
      - published
jobs:
  github-release:
    name: Create GitHub release
    runs-on: ubuntu-latest
    needs: build-package-win
    steps:
      - name: Download Windows GUI x64 package
        uses: actions/download-artifact@v3
        with:
          name: windows-gui-package
          path: windows-gui-package
      - name: Download Windows x64 package
        uses: actions/download-artifact@v3
        with:
          name: windows-package
          path: windows-package
      - name: Download macOS x64 package
        uses: actions/download-artifact@v3
        with:
          name: mac-package
          path: mac-package
      - name: Download Linux x64 package
        uses: actions/download-artifact@v3
        with:
          name: linux-package
          path: linux-package
      - name: Package output files
        run: |
          zip -r dmt-gui-${{ github.event.release.tag_name }}-win-x64.zip windows-gui-package/*
          zip -r dmt-${{ github.event.release.tag_name }}-win-x64.zip windows-package/*
          zip -r dmt-${{ github.event.release.tag_name }}-mac-x64.zip mac-package/*
          zip -r dmt-${{ github.event.release.tag_name }}-linux-x64.zip linux-package/*
      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dmt-gui-${{ github.event.release.tag_name }}-win-x64.zip
            dmt-${{ github.event.release.tag_name }}-win-x64.zip
            dmt-${{ github.event.release.tag_name }}-mac-x64.zip
            dmt-${{ github.event.release.tag_name }}-linux-x64.zip
  build-package:
    name: Build self-contained executables
    runs-on: ubuntu-latest
    container: mcr.microsoft.com/dotnet/sdk:6.0
    steps:
      - name: Check .NET version
        run: dotnet --version
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Execute Action build-with-plugins for MacOS
        uses: ./.github/actions/build-with-plugins
        id: build-with-plugins-mac
        with:
          platform: mac
          platform-short: mac
          runtime: osx-x64
          build-version: ${{ github.event.release.tag_name }}
      - name: Execute Action build-with-plugins for Linux
        uses: ./.github/actions/build-with-plugins
        id: build-with-plugins-linux
        with:
          platform: linux
          platform-short: linux
          runtime: linux-x64
          build-version: ${{ github.event.release.tag_name }}
  build-package-win:
    name: Build self-contained Windows executables
    runs-on: windows-2022
    needs: build-package
    steps:
      - name: Check .NET version
        run: dotnet --version
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Setup .NET 7
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 7.0.x
      - name: Execute Action build-with-plugins for Windows
        uses: ./.github/actions/build-with-plugins
        id: build-with-plugins-win
        with:
          platform: windows
          platform-short: win
          runtime: win-x64
          build-version: ${{ github.event.release.tag_name }}
      - name: Build Windows desktop package
        shell: bash
        run: |
          dotnet publish \
          App/Cosmos.DataTransfer.App.Windows/Cosmos.DataTransfer.App.Windows.csproj \
          --configuration Release \
          --output win \
          --self-contained true \
          --runtime win-x64 \
          -p:PublishSingleFile=true \
          -p:DebugType=embedded \
          -p:IncludeNativeLibrariesForSelfExtract=true \
          -p:EnableCompressionInSingleFile=true \
          -p:Version=${{ github.event.release.tag_name }}
      - name: Upload gui package
        uses: actions/upload-artifact@v3
        with:
          name: windows-gui-package
          path: win/
